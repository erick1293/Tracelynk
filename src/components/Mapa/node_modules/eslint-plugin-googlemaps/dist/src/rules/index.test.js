"use strict";
/**
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var fs_1 = require("fs");
var path_1 = require("path");
var __1 = __importDefault(require("../"));
var ruleNamePrefix = "googlemaps/";
var ruleNames = Object.keys(__1["default"].rules);
describe("rules", function () {
    test.skip.each(ruleNames)("should have a corresponding doc for %s", function (rule) {
        var docPath = (0, path_1.resolve)(__dirname, "../../docs/rules", "".concat(rule, ".md"));
        expect((0, fs_1.existsSync)(docPath)).toBeTruthy();
    });
    test.each(ruleNames)("should have a corresponding test for %s", function (rule) {
        var testPath = (0, path_1.resolve)(__dirname, "../rules/", "".concat(rule, ".test.ts"));
        expect((0, fs_1.existsSync)(testPath)).toBeTruthy();
    });
    it("should export configs that refer to actual rules", function () {
        var rules = __1["default"].configs.recommended.rules;
        // @ts-ignore
        Object.keys(rules).forEach(function (rule) {
            var ruleName = rule.slice(ruleNamePrefix.length);
            expect(rule.startsWith(ruleNamePrefix)).toBe(true);
            expect(ruleNames).toContain(ruleName);
            expect(function () { return require("../rules/".concat(ruleName)); }).not.toThrow();
        });
    });
});
